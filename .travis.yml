sudo: required

language: cpp

compiler:
    - gcc

os:
    - osx
    - linux

env:
    global:
    - DEPS_UBUNTU="g++ cmake libboost-regex-dev libkrb5-dev xfslibs-dev libssl-dev python-dev libfuse-dev default-jdk"
    - DEPS_CENTOS="gcc-c++ make cmake boost-devel krb5-devel xfsprogs-devel openssl-devel python-devel fuse-devel java-openjdk java-devel libuuid-devel"
    matrix:		
    - CONTAINER_LINUX_DISTRO=none # we need one row in the build matrix for osx build
    - CONTAINER_LINUX_DISTRO=ubuntu VER=14.04
    - CONTAINER_LINUX_DISTRO=centos VER=6

matrix:
    exclude:
    - os: osx
      env: CONTAINER_LINUX_DISTRO=ubuntu VER=14.04
    - os: osx
      env: CONTAINER_LINUX_DISTRO=centos VER=6
    - os: linux
      env: CONTAINER_LINUX_DISTRO=none

services:
    - docker

before_install:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update ; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install git || true ; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install cmake || true ; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install maven || true ; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install boost || true ; fi

    # travis ci on mac os x doesn't set java home properly
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export JAVA_HOME=$(/usr/libexec/java_home) ; fi

    # install facter to determine operating system and release version
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install caskroom/cask/brew-cask || true ; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask install facter || true ; fi    
    
    # we use docker to build on linux distros, so pull the corresponding docker image.
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then docker pull $CONTAINER_LINUX_DISTRO:$VER ; fi

script:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then make tarball ; fi

    - if [[ "$TRAVIS_OS_NAME" == "linux" && "$CONTAINER_LINUX_DISTRO" == "ubuntu" ]]; then
      docker run --rm -v `pwd`:`pwd` -w `pwd` $CONTAINER_LINUX_DISTRO:$VER /bin/bash -c
      "sudo apt-get update && sudo apt-get install -y $DEPS_UBUNTU && make tarball" ; fi

    - if [[ "$TRAVIS_OS_NAME" == "linux" && "$CONTAINER_LINUX_DISTRO" == "centos" ]]; then
      docker run --rm -v `pwd`:`pwd` -w `pwd` $CONTAINER_LINUX_DISTRO:$VER /bin/bash -c
      "yum install -y $DEPS_CENTOS && make tarball" ; fi

before_deploy:
    - mkdir artifacts
    - mv build/*.tgz artifacts/

deploy:
    provider: s3
    bucket: quantcast-qfs
    skip_cleanup: true
    region: us-east-1
    local_dir: artifacts
    access_key_id:
        - secure: IvmQ1sHBE+/USw+/adukFk1Wxq9Pn49PTvlbbRoI1D3W+ILc7u7+rFuNwQqAexXfBP71oMEE8YDR4U9dcoD4NinMd02lciFzrbtzErQ2Re2fU6k3I2OiyJ8ApAalKLxNmFC8jPTPufFT8gfCfOjoSDIpEffA75EzJVmDdDOspvw=
    secret_access_key:
        - secure: HkCLJKSX7jUPzsbZeiK3pSwECP79q6ypRnzudsTlRzmbW/eKloJHLwPEZycAakH9S24cqgjKTvv1O8XZ8sTGx0lhonRRBOXeYN9tVKrwL7CIbDHy4fOJkVQYG321EmKr3UIL9rAYZyR01WC1hEJ6pPJK7xgcFTDhZ0e47wegUlI=

addons:
    apt:
        packages:
            - git
